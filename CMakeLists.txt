CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
PROJECT(HADAMER)

SET(CMAKE_CXX_STANDARD 11)

FUNCTION(REBASE_PATH CURRENT_PATH CURRENT_BASE NEW_BASE OUTPUT)
    STRING(REGEX REPLACE "^${CURRENT_BASE}" "${NEW_BASE}" OUT_LOCAL "${CURRENT_PATH}")
    SET(${OUTPUT} ${OUT_LOCAL} PARENT_SCOPE)
ENDFUNCTION(REBASE_PATH)

FUNCTION(LUCGEN OUTPUT)
    LIST(REMOVE_AT ARGV 0)
    SET(LOCAL_OUTPUT "")
    FOREACH(FILE ${ARGV})
        STRING(REGEX REPLACE "\\.lu([ch])" ".\\1" OUT_FILE ${FILE})
        REBASE_PATH(${OUT_FILE} "src" "${CMAKE_BINARY_DIR}/gen" OUT_FILE)
        MESSAGE(${OUT_FILE})
        ADD_CUSTOM_COMMAND(OUTPUT ${OUT_FILE}
                           COMMAND "${CMAKE_SOURCE_DIR}/lucgen/lucgen.lua" "${CMAKE_SOURCE_DIR}/${FILE}" -o ${OUT_FILE} -l ${CMAKE_SOURCE_DIR}/src/config.lua
                           DEPENDS ${FILE})
        LIST(APPEND LOCAL_OUTPUT ${OUT_FILE})
    ENDFOREACH(FILE)
    SET(${OUTPUT} ${LOCAL_OUTPUT} PARENT_SCOPE)
ENDFUNCTION(LUCGEN)

FILE(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/gen)
INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR}/gen ${CMAKE_SOURCE_DIR}/src)

SET(LUC_SOURCES
    src/buffer.luc)

SET(LUC_HEADERS
    src/buffer.luh
    src/config.luh)

LUCGEN(GEN_SOURCES ${LUC_SOURCES})
LUCGEN(GEN_HEADERS ${LUC_HEADERS})

ADD_LIBRARY(hadamer ${GEN_HEADERS} ${GEN_SOURCES})
#ADD_EXECUTABLE(test ${TEST_SOURCES})

#ADD_CUSTOM_TARGET(format
#    COMMAND clang-format -style=file -i ${SOURCES} ${HEADERS} ${TEST_SOURCES}
#    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
